{"ast":null,"code":"var _jsxFileName = \"/Users/tanyaso/navbar/src/components/Searchbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Searchbar = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const countries = [{\n    name: \"Belgium\",\n    continent: \"Europe\"\n  }, {\n    name: \"India\",\n    continent: \"Asia\"\n  }, {\n    name: \"Bolivia\",\n    continent: \"South America\"\n  }, {\n    name: \"Ghana\",\n    continent: \"Africa\"\n  }, {\n    name: \"Japan\",\n    continent: \"Asia\"\n  }, {\n    name: \"Canada\",\n    continent: \"North America\"\n  }, {\n    name: \"New Zealand\",\n    continent: \"Australasia\"\n  }, {\n    name: \"Italy\",\n    continent: \"Europe\"\n  }, {\n    name: \"South Africa\",\n    continent: \"Africa\"\n  }, {\n    name: \"China\",\n    continent: \"Asia\"\n  }, {\n    name: \"Paraguay\",\n    continent: \"South America\"\n  }, {\n    name: \"Usa\",\n    continent: \"North America\"\n  }, {\n    name: \"France\",\n    continent: \"Europe\"\n  }, {\n    name: \"Botswana\",\n    continent: \"Africa\"\n  }, {\n    name: \"Spain\",\n    continent: \"Europe\"\n  }, {\n    name: \"Senegal\",\n    continent: \"Africa\"\n  }, {\n    name: \"Brazil\",\n    continent: \"South America\"\n  }, {\n    name: \"Denmark\",\n    continent: \"Europe\"\n  }, {\n    name: \"Mexico\",\n    continent: \"South America\"\n  }, {\n    name: \"Australia\",\n    continent: \"Australasia\"\n  }, {\n    name: \"Tanzania\",\n    continent: \"Africa\"\n  }, {\n    name: \"Bangladesh\",\n    continent: \"Asia\"\n  }, {\n    name: \"Portugal\",\n    continent: \"Europe\"\n  }, {\n    name: \"Pakistan\",\n    continent: \"Asia\"\n  }];\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  };\n  if (searchInput.length > 0) {\n    countries.filter(country => {\n      return country.name.match(searchInput);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search here\",\n      onChange: handleChange,\n      value: searchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 8\n  }, this);\n};\n_s(Searchbar, \"7jaUvtQT89vZZF+Gjg+8PUuVm+0=\");\n_c = Searchbar;\nexport default Searchbar;\nvar _c;\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"names":["React","useState","Searchbar","searchInput","setSearchInput","countries","name","continent","handleChange","e","preventDefault","target","value","length","filter","country","match"],"sources":["/Users/tanyaso/navbar/src/components/Searchbar.js"],"sourcesContent":["import React, {useState} from 'react'\n\n\nconst Searchbar = () => {\n\n const [searchInput, setSearchInput] = useState(\"\");\n\n const countries = [\n\n  { name: \"Belgium\", continent: \"Europe\" },\n  { name: \"India\", continent: \"Asia\" },\n  { name: \"Bolivia\", continent: \"South America\" },\n  { name: \"Ghana\", continent: \"Africa\" },\n  { name: \"Japan\", continent: \"Asia\" },\n  { name: \"Canada\", continent: \"North America\" },\n  { name: \"New Zealand\", continent: \"Australasia\" },\n  { name: \"Italy\", continent: \"Europe\" },\n  { name: \"South Africa\", continent: \"Africa\" },\n  { name: \"China\", continent: \"Asia\" },\n  { name: \"Paraguay\", continent: \"South America\" },\n  { name: \"Usa\", continent: \"North America\" },\n  { name: \"France\", continent: \"Europe\" },\n  { name: \"Botswana\", continent: \"Africa\" },\n  { name: \"Spain\", continent: \"Europe\" },\n  { name: \"Senegal\", continent: \"Africa\" },\n  { name: \"Brazil\", continent: \"South America\" },\n  { name: \"Denmark\", continent: \"Europe\" },\n  { name: \"Mexico\", continent: \"South America\" },\n  { name: \"Australia\", continent: \"Australasia\" },\n  { name: \"Tanzania\", continent: \"Africa\" },\n  { name: \"Bangladesh\", continent: \"Asia\" },\n  { name: \"Portugal\", continent: \"Europe\" },\n  { name: \"Pakistan\", continent: \"Asia\" },\n\n];\n\nconst handleChange = (e) => {\n  e.preventDefault();\n  setSearchInput(e.target.value);\n};\n\nif (searchInput.length > 0) {\n    countries.filter((country) => {\n    return country.name.match(searchInput);\n});\n}\n\nreturn <div>\n\n<input\n   type=\"search\"\n   placeholder=\"Search here\"\n   onChange={handleChange}\n   value={searchInput} />\n\n\n\n</div>\n\n\n};\n\nexport default Searchbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAGrC,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMI,SAAS,GAAG,CAEjB;IAAEC,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAO,CAAC,EACpC;IAAED,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAgB,CAAC,EAC/C;IAAED,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAS,CAAC,EACtC;IAAED,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAO,CAAC,EACpC;IAAED,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAgB,CAAC,EAC9C;IAAED,IAAI,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAc,CAAC,EACjD;IAAED,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAS,CAAC,EACtC;IAAED,IAAI,EAAE,cAAc;IAAEC,SAAS,EAAE;EAAS,CAAC,EAC7C;IAAED,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAO,CAAC,EACpC;IAAED,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAE;EAAgB,CAAC,EAChD;IAAED,IAAI,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAgB,CAAC,EAC3C;IAAED,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAS,CAAC,EACvC;IAAED,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAE;EAAS,CAAC,EACzC;IAAED,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAS,CAAC,EACtC;IAAED,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAgB,CAAC,EAC9C;IAAED,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAgB,CAAC,EAC9C;IAAED,IAAI,EAAE,WAAW;IAAEC,SAAS,EAAE;EAAc,CAAC,EAC/C;IAAED,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAE;EAAS,CAAC,EACzC;IAAED,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAO,CAAC,EACzC;IAAED,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAE;EAAS,CAAC,EACzC;IAAED,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAE;EAAO,CAAC,CAExC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBN,cAAc,CAACK,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,IAAIT,WAAW,CAACU,MAAM,GAAG,CAAC,EAAE;IACxBR,SAAS,CAACS,MAAM,CAAEC,OAAO,IAAK;MAC9B,OAAOA,OAAO,CAACT,IAAI,CAACU,KAAK,CAACb,WAAW,CAAC;IAC1C,CAAC,CAAC;EACF;EAEA,oBAAO;IAAA,uBAEP;MACG,IAAI,EAAC,QAAQ;MACb,WAAW,EAAC,aAAa;MACzB,QAAQ,EAAEK,YAAa;MACvB,KAAK,EAAEL;IAAY;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAInB;AAGN,CAAC;AAAC,GAzDID,SAAS;AAAA,KAATA,SAAS;AA2Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}